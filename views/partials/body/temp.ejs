<script>
  var config1 = {
        type: 'line',
        data: {
            labels: [],
            datasets: [
            {
                borderColor : "#FF4848",
                backgroundColor : "#FF4848",
                pointBorderColor : "#FF4848",
                pointBackgroundColor :"#FF4848",
                pointBorderWidth : 1,
                label: "실외",
                data: [],
                lineTension: 0,
                fill: false,
            },
           ]
        },
        options: {
            responsive: true,
            legend: {
                position: 'bottom',
            },
            hover: {
                mode: 'label'
            },
            scales: {
                xAxes: [{

                    display: true,
                    scaleLabel: {
                        display: true,
                        labelString: '시간'
                    }
                }],
                yAxes: [{
                    ticks:{
                      suggestedMax: 90,
                      beginAtZero: true
                    },
                    display: true,
                    scaleLabel: {
                        display: true,
                        labelString: 'ºC'
                    }
                }]
            },
            title: {
                display: true
            }
        }
    };


    var config2 = {
          type: 'line',
          data: {
              labels: [],
              datasets: [
              {
                  borderColor : "#FF4848",
                  backgroundColor : "#FF4848",
                  pointBorderColor : "#FF4848",
                  pointBackgroundColor :"#FF4848",
                  pointBorderWidth : 1,
                  label: "실내",
                  data: [],
                  lineTension: 0,
                  fill: false,
              },
             ]
          },
          options: {
              responsive: true,
              legend: {
                  position: 'bottom',
              },
              hover: {
                  mode: 'label'
              },
              scales: {
                  xAxes: [{

                      display: true,
                      scaleLabel: {
                          display: true,
                          labelString: '시간'
                      }
                  }],
                  yAxes: [{
                      ticks:{
                        suggestedMax: 90,
                        beginAtZero: true
                      },
                      display: true,
                      scaleLabel: {
                          display: true,
                          labelString: 'ºC'
                      }
                  }]
              },
              title: {
                  display: true
              }
          }
      };



    var initChart = function(){
    var ctx = document.getElementById("canvas").getContext("2d");
    var ctx2 = document.getElementById("canvas2").getContext("2d");
    window.myLine1 = new Chart(ctx, config1);
    window.myLine2 = new Chart(ctx2, config2);

  };


  window.onload = function() {
    //html tag가 모두 load 되었을 때
    var tempInStatus = new Array();
    var tempInTime = new Array();
    var tempOutStatus = new Array();
    var tempOutTime = new Array();
    <% data.forEach(function(e){ %>
      tempInStatus.push(<%= e.status %>);
      tempInTime.push('<%= e.time %>');
    <%})%>
    <% data2.forEach(function(e){ %>
      tempOutStatus.push(<%= e.status %>);
      tempOutTime.push('<%= e.time %>');
    <%})%>
      tempInStatus.reverse();
      tempInTime.reverse();
      tempOutStatus.reverse();
      tempOutTime.reverse();
      for(var i =0; i<<%=data3%>;i++){
        config2.data.datasets[0].data.push(tempInStatus[i]);
        config2.data.labels.push(tempInTime[i]);
      }
      for(var i =0; i<<%=data4%>;i++){
        config1.data.datasets[0].data.push(tempOutStatus[i]);
        config1.data.labels.push(tempOutTime[i]);
      }

    initChart();

  }
</script>
<script src = "socket.io/socket.io.js"></script>
<script>
const socket = io.connect("http://localhost:3000");


socket.on('arduinoTemp',(arduinoTemp)=>{
  console.log('Data from Arduino: '+arduinoTemp);
  if(config1.data.datasets.length>0){
    var now = new Date();
    var hour = now.getHours();
    var min = now.getMinutes();
    var second = now.getSeconds();
    config1.data.labels.push(hour+":"+min+":"+second);

    if(config1.data.labels.length==21){
      $.each(config1.data.datasets,(i,datasets)=>{
      config1.data.labels.shift(0,21);
      config1.data.datasets[0].data.shift(0,20);
      config1.data.datasets[0].data.push(arduinoTemp);
      })
    }
    else{
      $.each(config1.data.datasets,(i,datasets)=>{
      config1.data.datasets[0].data.push(arduinoTemp);
      })

    }
    window.myLine1.update();
  }
});
socket.on('raspiTemp',(raspiTemp)=>{
  console.log('Data from Raspberry: '+raspiTemp);
  if(config2.data.datasets.length>0){
    var now = new Date();
    var hour = now.getHours();
    var min = now.getMinutes();
    var second = now.getSeconds();
    config2.data.labels.push(hour+":"+min+":"+second);

    if(config2.data.labels.length==21){
      $.each(config2.data.datasets,(i,datasets)=>{
      config2.data.labels.shift(0,21);
      config2.data.datasets[0].data.shift(0,20);
      config2.data.datasets[0].data.push(raspiTemp);
      })
    }
    else{
      $.each(config2.data.datasets,(i,datasets)=>{
      config2.data.datasets[0].data.push(raspiTemp);
      })

    }
    window.myLine2.update();
  }
});
</script>
